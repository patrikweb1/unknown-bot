const TelegramBot = require('node-telegram-bot-api');

// –¢–æ–∫–µ–Ω –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
const token = process.env.TELEGRAM_TOKEN || '7811945406:AAHJ0Lua-lWI6quqG5lPr_cqAfKTeB5YU5M';
const bot = new TelegramBot(token, { polling: true });

// –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
const admins = {};
const antifloodEnabled = {};
const messageTracker = {};

let botId;

bot.getMe().then((me) => {
    botId = me.id;
    console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! ID –±–æ—Ç–∞: ${botId}`);
}).catch((error) => {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ ID –±–æ—Ç–∞:', error);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ polling
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error.code, error.message);
});

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
function formatDate(date) {
    const day = String(date.getDate()).padStart(2, '0');
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const year = date.getFullYear();
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');
    const seconds = String(date.getSeconds()).padStart(2, '0');
    return `${day}/${month}/${year} ${hours}:${minutes}:${seconds}`;
}

// –£—Ä–æ–≤–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
const adminLevels = {
    0: { nominative: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', accusative: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è' },
    1: { nominative: '–ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä', accusative: '–ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞' },
    2: { nominative: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä', accusative: '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞' },
    3: { nominative: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', accusative: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' },
    4: { nominative: '–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', accusative: '–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' },
    5: { nominative: '–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', accusative: '–ì–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞' }
};

// –ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –±–æ—Ç–∞ –≤ —á–∞—Ç
bot.on('new_chat_members', async (msg) => {
    const chatId = msg.chat.id;
    const newMembers = msg.new_chat_members;

    if (newMembers.some(member => member.id === botId)) {
        admins[chatId] = {};
        antifloodEnabled[chatId] = false;
        messageTracker[chatId] = {};
        await bot.sendMessage(chatId, '–í—ã–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞ ü§ñ (–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã –º–æ–∂–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞).');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text?.toLowerCase();
    const senderId = msg.from.id;

    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ ${chatId}: ${text} –æ—Ç ${senderId}`);

    // –ê–Ω—Ç–∏-—Ñ–ª—É–¥
    if (antifloodEnabled[chatId] && text && senderId !== botId) {
        const currentTime = Date.now();
        messageTracker[chatId] = messageTracker[chatId] || {};
        messageTracker[chatId][senderId] = messageTracker[chatId][senderId] || {};

        const userMessages = messageTracker[chatId][senderId];
        if (!userMessages[text]) {
            userMessages[text] = { count: 1, timestamp: currentTime };
        } else {
            const timeDiff = (currentTime - userMessages[text].timestamp) / 1000;
            if (timeDiff < 60) {
                userMessages[text].count += 1;
                if (userMessages[text].count > 3) {
                    const sender = msg.from;
                    const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
                    const muteUntil = new Date(currentTime + 30 * 60 * 1000);
                    const untilDate = Math.floor(muteUntil.getTime() / 1000);

                    try {
                        await bot.restrictChatMember(chatId, senderId, {
                            can_send_messages: false,
                            can_send_media_messages: false,
                            can_send_polls: false,
                            can_send_other_messages: false,
                            until_date: untilDate
                        });
                        await bot.sendMessage(chatId, `${senderName} –ø–æ–ª—É—á–∏–ª-(–∞) –º—É—Ç –Ω–∞ 30 –º–∏–Ω—É—Ç.\n–ü—Ä–∏—á–∏–Ω–∞: flood`);
                        delete messageTracker[chatId][senderId];
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –º—É—Ç–∞ –∑–∞ —Ñ–ª—É–¥:', error.code, error.message);
                    }
                    return;
                }
            } else {
                userMessages[text] = { count: 1, timestamp: currentTime };
            }
        }

        for (const msgText in userMessages) {
            if ((currentTime - userMessages[msgText].timestamp) / 1000 >= 60) {
                delete userMessages[msgText];
            }
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /start
    if (text === '/start') {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–í—ã–¥–∞–π—Ç–µ –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞ ü§ñ');
                return;
            }

            const creator = telegramAdmins.find(admin => admin.status === 'creator');
            if (!creator || creator.user.id !== senderId) {
                await bot.sendMessage(chatId, '–¢–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã –º–æ–∂–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é /start.');
                return;
            }

            if (!admins[chatId] || Object.keys(admins[chatId]).length === 0) {
                admins[chatId] = {};
                admins[chatId][senderId] = 5;
                console.log(`–ù–∞–∑–Ω–∞—á–µ–Ω –≥–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${senderId} –¥–ª—è —á–∞—Ç–∞ ${chatId}`);
                await bot.sendMessage(chatId, '–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ‚úÖ');
            } else {
                await bot.sendMessage(chatId, '–ë–æ—Ç —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –±–æ—Ç–∞.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /antifloodon
    if (text === '/antifloodon') {
        const senderLevel = admins[chatId]?.[senderId] || 0;
        if (senderLevel < 5) {
            await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".');
            return;
        }

        if (antifloodEnabled[chatId]) {
            await bot.sendMessage(chatId, '–ê–Ω—Ç–∏-—Ñ–ª—É–¥ —É–∂–µ –≤–∫–ª—é—á—ë–Ω.');
        } else {
            antifloodEnabled[chatId] = true;
            messageTracker[chatId] = {};
            await bot.sendMessage(chatId, '–ê–Ω—Ç–∏-—Ñ–ª—É–¥ —É—Å–ø–µ—à–Ω–æ –≤–∫–ª—é—á—ë–Ω.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /antifloodoff
    if (text === '/antifloodoff') {
        const senderLevel = admins[chatId]?.[senderId] || 0;
        if (senderLevel < 5) {
            await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".');
            return;
        }

        if (!antifloodEnabled[chatId]) {
            await bot.sendMessage(chatId, '–ê–Ω—Ç–∏-—Ñ–ª—É–¥ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω.');
        } else {
            antifloodEnabled[chatId] = false;
            messageTracker[chatId] = {};
            await bot.sendMessage(chatId, '–ê–Ω—Ç–∏-—Ñ–ª—É–¥ —É—Å–ø–µ—à–Ω–æ –≤—ã–∫–ª—é—á–µ–Ω.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /help
    if (text === '/help') {
        const helpMessage = [
            '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:',
            '/help - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',
            '/info - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ',
            '',
            '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:',
            '–ù–µ—Ç',
            '',
            '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤:',
            '/mute - –≤—ã–¥–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —á–∞—Ç–∞',
            '/unmute - —Å–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —á–∞—Ç–∞',
            '/kick - –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã',
            '',
            '–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:',
            '/addmlmoder - –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ—Å—Ç "–ú–ª. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"',
            '/delmlmoder - —Å–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å—Ç–∞ "–ú–ª. –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"',
            '/addmoder - –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ—Å—Ç "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"',
            '/delmoder - —Å–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å—Ç–∞ "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä"',
            '/ban - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É',
            '/unban - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É',
            '',
            '–ö–æ–º–∞–Ω–¥—ã –ó–ì–ê:',
            '/addadmin - –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ—Å—Ç "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"',
            '/deladmin - —Å–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å—Ç–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"',
            '',
            '–ö–æ–º–∞–Ω–¥—ã –ì–ê:',
            '/addzga - –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –ø–æ—Å—Ç "–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"',
            '/delzga - —Å–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ—Å—Ç–∞ "–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"',
            '/antifloodon - –≤–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–Ω—Ç–∏-—Ñ–ª—É–¥–∞',
            '/antifloodoff - –≤—ã–∫–ª—é—á–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –∞–Ω—Ç–∏-—Ñ–ª—É–¥–∞'
        ].join('\n');

        await bot.sendMessage(chatId, helpMessage);
    }

    // –ö–æ–º–∞–Ω–¥–∞ /info
    if (text === '/info') {
        const infoMessage = [
            '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:',
            '',
            '–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: Beta 1.0',
            '–ù–∞–∑–≤–∞–Ω–∏–µ: UNKNOWN MANAGER',
            '–Ø–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è: NodeJS',
            '–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ—Å–µ–¥',
            '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @N1ZZiDENT'
        ].join('\n');

        await bot.sendMessage(chatId, infoMessage);
    }

    // –ö–æ–º–∞–Ω–¥–∞ /kick
    if (text && text.startsWith('/kick')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 2) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å, —Å –∫–æ–º–∞–Ω–¥–æ–π /kick <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –∏—Å–∫–ª—é—á–∏—Ç—å —Å–µ–±—è!');
                return;
            }

            const targetLevel = admins[chatId]?.[targetId] || 0;
            if (targetLevel >= senderLevel) {
                await bot.sendMessage(chatId, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –≤–∞—à–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;
            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

            await bot.banChatMember(chatId, targetId);
            await bot.unbanChatMember(chatId, targetId);

            await bot.sendMessage(chatId, `${senderName} –∏—Å–∫–ª—é—á–∏–ª-(–∞) ${targetName}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–∏.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /mute
    if (text && text.startsWith('/mute')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 2) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å, —Å –∫–æ–º–∞–Ω–¥–æ–π /mute <–º–∏–Ω—É—Ç—ã> <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –∑–∞–º—É—Ç–∏—Ç—å —Å–µ–±—è!');
                return;
            }

            const targetLevel = admins[chatId]?.[targetId] || 0;
            if (targetLevel >= senderLevel) {
                await bot.sendMessage(chatId, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –≤–∞—à–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.');
                return;
            }

            const args = text.split(' ');
            if (args.length < 2 || isNaN(args[1])) {
                await bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è –º—É—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä: /mute 60 <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const minutes = parseInt(args[1], 10);
            if (minutes <= 0) {
                await bot.sendMessage(chatId, '–í—Ä–µ–º—è –º—É—Ç–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0 –º–∏–Ω—É—Ç.');
                return;
            }

            const reason = args.slice(2).join(' ') || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            const muteUntil = new Date(Date.now() + minutes * 60 * 1000);
            const untilDate = Math.floor(muteUntil.getTime() / 1000);

            await bot.restrictChatMember(chatId, targetId, {
                can_send_messages: false,
                can_send_media_messages: false,
                can_send_polls: false,
                can_send_other_messages: false,
                until_date: untilDate
            });

            await bot.sendMessage(chatId, `${senderName} –∑–∞–º—É—Ç–∏–ª-(–∞) ${targetName}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}\n–ú—É—Ç –≤—ã–¥–∞–Ω –¥–æ: ${formatDate(muteUntil)}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –º—É—Ç–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –º—É—Ç–∞.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /unmute
    if (text && text.startsWith('/unmute')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è –º—É—Ç–∞.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 2) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–º—É—Ç–∏—Ç—å, —Å –∫–æ–º–∞–Ω–¥–æ–π /unmute <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Ä–∞–∑–º—É—Ç–∏—Ç—å —Å–µ–±—è!');
                return;
            }

            const targetLevel = admins[chatId]?.[targetId] || 0;
            if (targetLevel >= senderLevel) {
                await bot.sendMessage(chatId, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –≤–∞—à–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.');
                return;
            }

            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            await bot.restrictChatMember(chatId, targetId, {
                can_send_messages: true,
                can_send_media_messages: true,
                can_send_polls: true,
                can_send_other_messages: true,
                until_date: 0
            });

            await bot.sendMessage(chatId, `${senderName} —Ä–∞–∑–º—É—Ç–∏–ª-(–∞) ${targetName}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –º—É—Ç–∞.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /ban
    if (text && text.startsWith('/ban')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å, —Å –∫–æ–º–∞–Ω–¥–æ–π /ban <–¥–Ω–∏> <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–µ–±—è!');
                return;
            }

            const targetLevel = admins[chatId]?.[targetId] || 0;
            if (targetLevel >= senderLevel) {
                await bot.sendMessage(chatId, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –≤–∞—à–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.');
                return;
            }

            const args = text.split(' ');
            if (args.length < 2 || isNaN(args[1])) {
                await bot.sendMessage(chatId, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: /ban 7 <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const days = parseInt(args[1], 10);
            if (days <= 0) {
                await bot.sendMessage(chatId, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.');
                return;
            }

            const reason = args.slice(2).join(' ') || '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            const banUntil = new Date(Date.now() + days * 24 * 60 * 60 * 1000);
            const untilDate = Math.floor(banUntil.getTime() / 1000);

            await bot.banChatMember(chatId, targetId, { until_date: untilDate });

            await bot.sendMessage(chatId, `${senderName} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª-(–∞) ${targetName} –Ω–∞ ${days} –¥–Ω.\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /unban
    if (text && text.startsWith('/unban')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å, —Å –∫–æ–º–∞–Ω–¥–æ–π /unban <–ø—Ä–∏—á–∏–Ω–∞>');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —Å–µ–±—è!');
                return;
            }

            const targetLevel = admins[chatId]?.[targetId] || 0;
            if (targetLevel >= senderLevel) {
                await bot.sendMessage(chatId, '–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ–π –≤–∞—à–µ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏.');
                return;
            }

            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            await bot.unbanChatMember(chatId, targetId);

            await bot.sendMessage(chatId, `${senderName} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª-(–∞) ${targetName}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–µ.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /addmlmoder
    if (text && text.startsWith('/addmlmoder')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ —Å–µ–±–µ!');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            admins[chatId] = admins[chatId] || {};
            admins[chatId][targetId] = 1;

            await bot.sendMessage(chatId, `${senderName} –≤—ã–¥–∞–ª-(–∞) –ø—Ä–∞–≤–∞ ${adminLevels[1].accusative} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetName}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /addmoder
    if (text && text.startsWith('/addmoder')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ —Å–µ–±–µ!');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            admins[chatId] = admins[chatId] || {};
            admins[chatId][targetId] = 2;

            await bot.sendMessage(chatId, `${senderName} –≤—ã–¥–∞–ª-(–∞) –ø—Ä–∞–≤–∞ ${adminLevels[2].accusative} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetName}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /addadmin
    if (text && text.startsWith('/addadmin')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 4) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ —Å–µ–±–µ!');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            admins[chatId] = admins[chatId] || {};
            admins[chatId][targetId] = 3;

            await bot.sendMessage(chatId, `${senderName} –≤—ã–¥–∞–ª-(–∞) –ø—Ä–∞–≤–∞ ${adminLevels[3].accusative} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetName}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /addzga
    if (text && text.startsWith('/addzga')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 5) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø—Ä–∞–≤–∞ –ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É –Ω–∞–∑–Ω–∞—á–∏—Ç—å –ø—Ä–∞–≤–∞ —Å–µ–±–µ!');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;

            admins[chatId] = admins[chatId] || {};
            admins[chatId][targetId] = 4;

            await bot.sendMessage(chatId, `${senderName} –≤—ã–¥–∞–ª-(–∞) –ø—Ä–∞–≤–∞ ${adminLevels[4].accusative} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetName}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ó–ì–ê:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /delmlmoder
    if (text && text.startsWith('/delmlmoder')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å —Å –ø–æ—Å—Ç–∞ –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —Å —Å–µ–±—è!');
                return;
            }

            if (!admins[chatId] || !admins[chatId][targetId] || admins[chatId][targetId] !== 1) {
                await bot.sendMessage(chatId, '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;
            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

            delete admins[chatId][targetId];

            await bot.sendMessage(chatId, `${senderName} —Å–Ω—è–ª-(–∞) ${targetName} —Å –ø–æ—Å—Ç–∞ ${adminLevels[1].accusative}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /delmoder
    if (text && text.startsWith('/delmoder')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 3) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å —Å –ø–æ—Å—Ç–∞ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —Å —Å–µ–±—è!');
                return;
            }

            if (!admins[chatId] || !admins[chatId][targetId] || admins[chatId][targetId] !== 2) {
                await bot.sendMessage(chatId, '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º.');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;
            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

            delete admins[chatId][targetId];

            await bot.sendMessage(chatId, `${senderName} —Å–Ω—è–ª-(–∞) ${targetName} —Å –ø–æ—Å—Ç–∞ ${adminLevels[2].accusative}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /deladmin
    if (text && text.startsWith('/deladmin')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 4) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" –∏–ª–∏ –≤—ã—à–µ.');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å —Å –ø–æ—Å—Ç–∞ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —Å —Å–µ–±—è!');
                return;
            }

            if (!admins[chatId] || !admins[chatId][targetId] || admins[chatId][targetId] !== 3) {
                await bot.sendMessage(chatId, '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;
            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

            delete admins[chatId][targetId];

            await bot.sendMessage(chatId, `${senderName} —Å–Ω—è–ª-(–∞) ${targetName} —Å –ø–æ—Å—Ç–∞ ${adminLevels[3].accusative}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /delzga
    if (text && text.startsWith('/delzga')) {
        try {
            const telegramAdmins = await bot.getChatAdministrators(chatId);
            const isBotAdmin = telegramAdmins.some(admin => admin.user.id === botId);

            if (!isBotAdmin) {
                await bot.sendMessage(chatId, '–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–Ω—è—Ç–∏—è —Ä–æ–ª–µ–π.');
                return;
            }

            const senderLevel = admins[chatId]?.[senderId] || 0;
            if (senderLevel < 5) {
                await bot.sendMessage(chatId, '–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Ä–æ–≤–µ–Ω—å "–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä".');
                return;
            }

            if (!msg.reply_to_message) {
                await bot.sendMessage(chatId, '–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —Å–Ω—è—Ç—å —Å –ø–æ—Å—Ç–∞ –ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const targetId = msg.reply_to_message.from.id;
            if (targetId === botId) {
                await bot.sendMessage(chatId, '–Ø –Ω–µ –º–æ–≥—É —Å–Ω—è—Ç—å –ø—Ä–∞–≤–∞ —Å —Å–µ–±—è!');
                return;
            }

            if (!admins[chatId] || !admins[chatId][targetId] || admins[chatId][targetId] !== 4) {
                await bot.sendMessage(chatId, '–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ó–∞–º. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                return;
            }

            const sender = msg.from;
            const senderName = `${sender.first_name}${sender.last_name ? ' ' + sender.last_name : ''}`;
            const target = msg.reply_to_message.from;
            const targetName = `${target.first_name}${target.last_name ? ' ' + target.last_name : ''}`;
            const args = text.split(' ').slice(1).join(' ');
            const reason = args.length > 0 ? args : '–ù–µ —É–∫–∞–∑–∞–Ω–∞';

            delete admins[chatId][targetId];

            await bot.sendMessage(chatId, `${senderName} —Å–Ω—è–ª-(–∞) ${targetName} —Å –ø–æ—Å—Ç–∞ ${adminLevels[4].accusative}\n–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ó–ì–ê:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–Ω—è—Ç–∏–∏ –ø—Ä–∞–≤.');
        }
    }

    // –ö–æ–º–∞–Ω–¥–∞ /staff
    if (text === '/staff') {
        try {
            if (!admins[chatId] || Object.keys(admins[chatId]).length === 0) {
                await bot.sendMessage(chatId, '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç. –ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ /start (—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç–µ–ª—å –±–µ—Å–µ–¥—ã).');
                return;
            }

            const adminList = Object.entries(admins[chatId]).filter(([_, level]) => level > 0);
            const userIds = adminList.map(([id]) => parseInt(id));
            const users = await Promise.all(userIds.map(id => bot.getChatMember(chatId, id).catch(() => null)));
            const staffByLevel = { 5: [], 4: [], 3: [], 2: [], 1: [] };

            for (const [userId, level] of adminList) {
                const user = users.find(u => u && u.user.id === parseInt(userId))?.user;
                if (user) {
                    const name = `${user.first_name}${user.last_name ? ' ' + user.last_name : ''}`;
                    const username = user.username ? `@${user.username}` : '';
                    staffByLevel[level].push(`${name} (${username})`);
                }
            }

            const message = [
                '–°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ —á–∞—Ç–∞:',
                '> –ì–ª–∞–≤–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:',
                staffByLevel[5].length > 0 ? staffByLevel[5].join('\n') : '–ù–µ—Ç',
                '> –ó–∞–º—ã. –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:',
                staffByLevel[4].length > 0 ? staffByLevel[4].join('\n') : '–ù–µ—Ç',
                '> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:',
                staffByLevel[3].length > 0 ? staffByLevel[3].join('\n') : '–ù–µ—Ç',
                '> –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:',
                staffByLevel[2].length > 0 ? staffByLevel[2].join('\n') : '–ù–µ—Ç',
                '> –ú–ª. –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã:',
                staffByLevel[1].length > 0 ? staffByLevel[1].join('\n') : '–ù–µ—Ç'
            ].join('\n');

            await bot.sendMessage(chatId, message);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ /staff:', error.code, error.message);
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.');
        }
    }
});

// –£–¥–µ—Ä–∂–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∞–∫—Ç–∏–≤–Ω—ã–º
process.on('uncaughtException', (error) => {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
});

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...');
